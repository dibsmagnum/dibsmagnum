Answer the below question :

1. Can you create a sub class to the following class?
class A
{
    private A()
    {
        //First Constructor
    }
     
    private A(int i)
    {
        //Second Constructor
    }
}

--Answer -- Yes ,If a constructor is declared as private, 
            then its objects are only accessible from within the declared class

2. Does field ‘i’ of Class A be inherited to Class B in the below code?

class A
{
    protected int i;
}
 
class B extends A
{
     
}

--Answer -- Yes we can inherite the "i" variable in class B as because it is protected 
            if it was private then we can used that variable using getter or setter method.

3. Is the below code written correctly?

class A
{
    private class B
    {
        //inner class
    }
}
 
public class MainClass extends A
{
    public static void main(String[] args)
    {
        B b = new B();
    }
}

--Answer -- No the above example is Nested Class and it can only be inherited 
            using class A.

4. Is the below code written correctly?

package pack1;
 
class A
{
     
}
 
package pack2;
 
class B extends A
{
     
}

--Answer -- Yes, they can always inherit the protected members of its superclass regardless of the package they are in.


5. Can we declare a class as protected?

--Answer -- No, we cannot declare a top-level class as private or protected. It can be either public or default (no modifier).

6. Do you think the below program is written correctly? If yes, what will be the output?

package pack1;
 
class X
{
    protected int i = 1221;
     
    void methodOfX()
    {
        System.out.println(i);
    }
}
 
public class MainClass
{
    public static void main(String[] args)
    {
        X x = new X();
         
        System.out.println(x.i);
         
        x.methodOfX();
    }
}

--Answer -- output is 1221 1221.

7. Is the below programme works ? If not what will be the reason ?

package pack1;
 
class A
{
    public A()
    {
        //public constructor
    }
}
 
package pack2;
 
import pack1.*;
 
class B
{
    A a = new A();       //Compile Time Error
}

8. Can a protected field of a class be inherited to subclass outside the package?
9.Why Line 17 in the below code is throwing compile time error?

package pack1;
 
public class A
{
    protected A()
    {
        //protected constructor
    }
}
 
package pack2;
 
import pack1.A;
 
class B
{
    A a = new A();
}

10. Can we declare static methods as private?
Answer Yes, we can have private methods or private static methods in an interface

11. What will be the outcome of the below program?

package pack1;
 
public class A
{
    private int methodOne(int i)
    {
        return ++i;
    }
     
    public int methodTwo(int i)
    {
        return methodOne(++i);
    }
}
 
package pack2;
 
import pack1.A;
 
class B extends A
{
    int methodOne(int i)
    {
        return methodTwo(++i);
    }
}
 
public class MainClass
{
    public static void main(String[] args)
    {
        System.out.println(new B().methodOne(101));
    }
}

12. Can you find out the error in the following code snippet?

class A
{
    public void methodOfA()
    {
        System.out.println("Class A");
    }
}
 
class B extends A
{
    @Override
    void methodOfA()// --Answer -- create an error as here it isn't mention whether it is public or not  //Cannot reduce the visibility of the inherited method from A
    {
        System.out.println("Class B");
    }
}

13. private method can be overridden as public method. True or False? --False a private method cannot be overridden since it is not visible from any other class.

14. A method of super class with default access modifier can be overridden as protected or public but not as private. True or false?-- True

15. Write the code on below scenario :

Create an Employee Object which has the below members :

1. name : public member.
2. address : public member.
3. salary : private member
4. id : public member

you need to create three employee such as : CEO,Project Manager and Team Lead who will inherit all those properties.
You need to create one more super user HR who has access over the system and can see all the details of all employees. This class will contain one method calculatesalary which will give 
the salary of the employee as : employee's salary * hike (consider hike =10%).

Data Sample :

CEO : name : "Rajesh Kumar ", address : "SaltLake,Kolkata", salary : 70000, id :1, calculatedsalary : 70000*10%

-Answer-

class Employee{
    public String name;
    public int id;
    public String address;
    private double salary;
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public int getId() {
        return id;
    }
    public void setId(int id) {
        this.id = id;
    }
    public String getAddress() {
        return address;
    }
    public void setAddress(String address) {
        this.address = address;
    }
    public double getSalary() {
        return salary;
    }
    public void setSalary(double salary) {
        this.salary = salary;
    }
    public Employee(String name, int id, String address, double salary) {
        this.name = name;
        this.id = id;
        this.address = address;
        this.salary = salary;
    }
    
}
class CEO extends Employee{

    public CEO(String name, int id, String address, double salary) {
        super(name, id, address, salary);
    }

}
class projectManager extends Employee{

    public projectManager(String name, int id, String address, double salary) {
        super(name, id, address, salary);
    }

}
class teamLead extends Employee{

    public teamLead(String name, int id, String address, double salary) {
        super(name, id, address, salary);
    }
    
}
class HR extends Employee{
    public double hike=0.1;
    public HR(String name, int id, String address, double salary) {
        super(name, id, address, salary);
    }
    public double calculatedSalary(double salary){
        return salary*hike;   
    }
}
public class day1{
    public static void main(String[] args) {
        HR hr=new HR("Rajesh Kumar", 1, "SaltLake,Kolkata", 70000);
        hr.calculatedSalary(70000);
        System.out.println("Name: "+hr.getName()+" "+"Address: "+hr.getAddress()+" "+"Id: "+hr.getId()+" "+"Salary: "+hr.getSalary()+" "+"CalculatedSalary: "+hr.calculatedSalary(70000));
    }
}